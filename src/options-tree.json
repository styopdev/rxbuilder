{
    "data": {
        "groups": [{
            "id": "add",
            "tooltip": "Let's say you already have an observable and you want to apply an action",
            "parent_ids": [null],
            "options": ["async", "map", "filter", "interval"]
        }, {
            "id": "order",
            "tooltip": "Should your async actions run at the same time or next to each other?",
            "parent_ids": ["async"],
            "options": ["next", "parallel"]
        }, {
            "id": "failure_tolerance",
            "tooltip": "What should happen with second observable if first unfortunately fails?",
            "parent_ids": ["next", "parallel"],
            "options": ["continue", "cancel"]
        }, {
            "id": "argument_chain",
            "tooltip": "Would you like to use response of first observable in second one",
            "parent_ids": ["continue", "cancel"],
            "options": ["pass", "ignore"]
        }, {
            "id": "map_input",
            "parent_ids": ["map"],
            "options": ["map_input"]
        }, {
            "id": "interval_input",
            "parent_ids": ["interval"],
            "options": ["interval_input"]
        }],
        "options": [{
            "id": "async",
            "type": "text",
            "icon": "fa-reply"
        }, {
          "id": "map",
          "type": "text",
          "icon": "fa-arrows-h"
        },{
          "id": "interval",
          "type": "text",
          "icon": "fa-clock-o"
        },{
            "id": "filter",
            "type": "text",
            "icon": "fa-sliders"
        }, {
            "id": "next",
            "type": "text",
            "icon": "fa-forward"
        }, {
            "id": "parallel",
            "type": "text",
            "icon": "fa-bars"
        }, {
            "id": "continue",
            "type": "text",
            "icon": "fa-caret-right"
        }, {
            "id": "cancel",
            "type": "text",
            "icon": "fa-times"
        }, {
            "id": "pass",
            "type": "text",
            "icon": "fa-share"
        }, {
            "id": "ignore",
            "type": "text",
            "icon": "fa-circle-o"
        }, {
            "id": "map_input",
            "type": "input",
            "icon": ""
        }, {
            "id": "interval_input",
            "type": "input",
            "icon": ""
        }],
        "operators": {
            "async.parallel.cancel.ignore": "forkJoin"
        },
        "codes": {
            "forkJoin": "forkJoin([observable1, observable2])\n  .subscribe([result1, result2] => { \n     //console.log('result 1: ', result1, ' result 2', result2); \n });"
        }
    }
}
